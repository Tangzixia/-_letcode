#include <iostream>
#include <string>

using namespace std;


bool isPalindrome(int x){
	if (x < 0) return false;
	else{
		long n = 0;
		long temp = x;
		long lx = x;
		while (temp){
			n = n * 10 + temp % 10;
			temp /= 10;
		}
		if (n == lx) return true;
		else return false;
	}
}
int atoi(string str){
	long result = 0;
	int i = 0;
	bool isNegetive = false;
	int max = 2147483647;
	int min =2147483647*-1;
	while (str[i] != '\0'&&str[i] == ' ') i++;
	if (str[i] == '-'){
		isNegetive = true;
		i++;
	}
	if (str[i] == '+'){
		i++;
	}
	while (i < str.length()){
		if (str[i] >= '0'&&str[i] <= '9'){
			result *= 10;
			result += (str[i] - '0');
			i++;
		}
		else return min;

		long result_temp = (isNegetive == true) ? -result : result;
		if (!isNegetive&&result >= max) return max;
		if (isNegetive && result <= min) return min;
	}
	return isNegetive == true ? -result : result;
}
bool match(const char*s, const char* p){
	if (*p == '\0') return *s == '\0';
	if (*(p + 1) == '*'){
		while (*s == *p || *s != '\0'&&*p == '.'){
			if (match(s, p + 2)) return true;
			s++;
		}
		return match(s, p + 2);
	}
	else{
		if (*s == *p || *s != '\0'&&*p == '.'){
			return match(s + 1, p + 1);
		}
		return false;
	}
}
int main(){
	string s = "aaab";
	string p = "a*b";
	cout << match(s.c_str(), p.c_str()) << endl;
	return 0;
}
